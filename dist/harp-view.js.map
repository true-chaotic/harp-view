{"version":3,"sources":["helpers/insertAfter.js","helpers/translate.js","helpers/tuneValid.js","helpers/createElement.js","viewer.js","vendor/ion.sound.js","player.js","helpers/noop.js","ticker.js","controller-view.js","helpers/isPause.js","controller.js","harp-view.js"],"names":["insertAfter","newNode","referenceNode","parentNode","insertBefore","nextSibling","translate","translations","lang","key","tuneValid","tune","Boolean","createElement","name","classes","listeners","element","document","classesArray","classList","add","Object","keys","forEach","event","addEventListener","Viewer","$el","assign","style","padding","note","innerText","border","borderRadius","display","appendChild","highLight","backgroundColor","dim","dimAll","window","navigator","$","undefined","ion","sound","warn","text","console","log","d","length","a","html","extend","parent","child","prop","hasOwnProperty","Audio","func","play","stop","pause","preload","destroy","is_iOS","i","test","appVersion","sounds_num","settings","sounds","supported","options","obj","path","volume","multiplay","loop","sprite","scope","ready_callback","ended_callback","alias","Sound","init","VERSION","_method","method","ionSound","AudioContext","audio","webkitAudioContext","request","streams","result","ext","url","loaded","decoded","no_file","autoplay","prototype","load","stream","buffer","removeEventListener","ready","bind","error","abort","createUrl","no_cache","Date","valueOf","encodeURIComponent","XMLHttpRequest","open","responseType","send","reload","data","target","readyState","status","decode","decodeAudioData","response","setBuffer","config","duration","call","start","end","Stream","part","setVolume","sprite_part","setLoop","source","gain","playing","paused","time_started","time_ended","time_played","time_offset","disconnect","update","createGain","createBufferSource","connect","destination","value","onended","ended","_play","clear","noteOn","noteOff","_ended","item","can_play_mp3","canPlayType","can_play_ogg","can_play_aac","splice","checkSupport","inited","_ready","_scope","start_time","paused_time","played_time","can_play_through","_update","rand","src","currentTime","e","current_time","setTimeout","looper","jQuery","Player","NOTES","SNAP","A","instance","GlobalPlayer","values","map","playNote","playSnap","noop","second","minute","Ticker","interval","ticksPerMinute","onTick","clearInterval","setInterval","ControllerView","onPlay","onStop","viewerElement","block","state","playButton","click","updateButton","viewerContainer","isPause","PAUSES","Set","has","Controller","ticker","controllerView","tick","tuneIndex","tuneArray","split","viewer","player","HarpView","selector","querySelectorAll","node","innerHTML","trim"],"mappings":"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","file":"harp-view.js","sourceRoot":"..\\src","sourcesContent":["/**\r\n * insertAfter helper\r\n *\r\n * @param {Element} newNode\r\n * @param {Element} referenceNode\r\n */\r\nexport default function insertAfter(newNode, referenceNode) {\r\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\r\n}\r\n","const translations = {\r\n  'en': {\r\n    'error.bad-tune': \"Empty tune or unknown format\",\r\n    'play': 'Play',\r\n    'pause': 'Pause',\r\n    'stop': 'Stop'\r\n  },\r\n\r\n  'ru': {\r\n    'error.bad-tune': 'Пустая мелодия или ошибка в записи',\r\n    'play': 'Играть',\r\n    'pause': 'Пауза',\r\n    'stop': 'Остановить'\r\n  }\r\n};\r\n\r\nconst lang = 'en';\r\n\r\n/**\r\n * Translate by key\r\n *\r\n * @param key\r\n * @returns {string}\r\n */\r\nconst translate = key =>\r\n  translations\r\n  && translations[lang]\r\n  && translations[lang][key]\r\n  || key;\r\n\r\nexport default translate;\r\n","/**\r\n * Validates tune\r\n *  - not empty\r\n *  @TODO: conforms to chosen standard (e.g. abc)\r\n *\r\n * @param {string} tune\r\n * @returns {boolean}\r\n */\r\nexport default function tuneValid(tune) {\r\n  return Boolean(tune);\r\n}\r\n","/**\r\n * Creates element with class and listeners\r\n *\r\n * @param {string} name\r\n * @param {string|array} [classes=[]]\r\n * @param {object} [listeners={}]\r\n * @returns {Element}\r\n */\r\nexport default function createElement(name, classes = [], listeners = {}) {\r\n  const element = document.createElement(name);\r\n  const classesArray = typeof classes === 'string'\r\n    ? [classes]\r\n    : classes;\r\n\r\n  element.classList.add(...classesArray);\r\n\r\n  Object.keys(listeners).forEach(event => {\r\n    element.addEventListener(event, listeners[event]);\r\n  });\r\n\r\n  return element;\r\n}\r\n","import createElement from \"./helpers/createElement\";\r\n\r\nexport default function Viewer() {\r\n  const $el = createElement('div', 'notes-viewer');\r\n  Object.assign($el.style, {\r\n    padding: '10px'\r\n  });\r\n\r\n  const note = createElement('span', 'notes-viewer__note');\r\n  note.innerText = 'A';\r\n\r\n  Object.assign(note.style, {\r\n    border: '1px solid black',\r\n    borderRadius: '100%',\r\n    padding: '5px 10px',\r\n    display: 'inline-block'\r\n  });\r\n\r\n  $el.appendChild(note);\r\n\r\n  return {\r\n    $el,\r\n    highLight: () => {\r\n      note.style.backgroundColor = 'green';\r\n    },\r\n    dim: () => {},\r\n    dimAll: () => {\r\n      note.style.backgroundColor = 'transparent';\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","/**\r\n * Ion.Sound\r\n * version 3.0.7 Build 89\r\n * © Denis Ineshin, 2016\r\n *\r\n * Project page:    http://ionden.com/a/plugins/ion.sound/en.html\r\n * GitHub page:     https://github.com/IonDen/ion.sound\r\n *\r\n * Released under MIT licence:\r\n * http://ionden.com/a/plugins/licence-en.html\r\n */\r\n\r\n;(function (window, navigator, $, undefined) {\r\n    \"use strict\";\r\n\r\n    window.ion = window.ion || {};\r\n\r\n    if (ion.sound) {\r\n        return;\r\n    }\r\n\r\n    var warn = function (text) {\r\n        if (!text) text = \"undefined\";\r\n\r\n        if (window.console) {\r\n            if (console.warn && typeof console.warn === \"function\") {\r\n                console.warn(text);\r\n            } else if (console.log && typeof console.log === \"function\") {\r\n                console.log(text);\r\n            }\r\n\r\n            var d = $ && $(\"#debug\");\r\n            if (d && d.length) {\r\n                var a = d.html();\r\n                d.html(a + text + '<br/>');\r\n            }\r\n        }\r\n    };\r\n\r\n    var extend = function (parent, child) {\r\n        var prop;\r\n        child = child || {};\r\n\r\n        for (prop in parent) {\r\n            if (parent.hasOwnProperty(prop)) {\r\n                child[prop] = parent[prop];\r\n            }\r\n        }\r\n\r\n        return child;\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * DISABLE for unsupported browsers\r\n     */\r\n\r\n    if (typeof Audio !== \"function\" && typeof Audio !== \"object\") {\r\n        var func = function () {\r\n            warn(\"HTML5 Audio is not supported in this browser\");\r\n        };\r\n        ion.sound = func;\r\n        ion.sound.play = func;\r\n        ion.sound.stop = func;\r\n        ion.sound.pause = func;\r\n        ion.sound.preload = func;\r\n        ion.sound.destroy = func;\r\n        func();\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * CORE\r\n     * - creating sounds collection\r\n     * - public methods\r\n     */\r\n\r\n    var is_iOS = /iPad|iPhone|iPod/.test(navigator.appVersion),\r\n        sounds_num = 0,\r\n        settings = {},\r\n        sounds = {},\r\n        i;\r\n\r\n\r\n\r\n    if (!settings.supported && is_iOS) {\r\n        settings.supported = [\"mp3\", \"mp4\", \"aac\"];\r\n    } else if (!settings.supported) {\r\n        settings.supported = [\"mp3\", \"ogg\", \"mp4\", \"aac\", \"wav\"];\r\n    }\r\n\r\n    var createSound = function (obj) {\r\n        var name = obj.alias || obj.name;\r\n\r\n        if (!sounds[name]) {\r\n            sounds[name] = new Sound(obj);\r\n            sounds[name].init();\r\n        }\r\n    };\r\n\r\n    ion.sound = function (options) {\r\n        extend(options, settings);\r\n\r\n        settings.path = settings.path || \"\";\r\n        settings.volume = settings.volume || 1;\r\n        settings.preload = settings.preload || false;\r\n        settings.multiplay = settings.multiplay || false;\r\n        settings.loop = settings.loop || false;\r\n        settings.sprite = settings.sprite || null;\r\n        settings.scope = settings.scope || null;\r\n        settings.ready_callback = settings.ready_callback || null;\r\n        settings.ended_callback = settings.ended_callback || null;\r\n\r\n        sounds_num = settings.sounds.length;\r\n\r\n        if (!sounds_num) {\r\n            warn(\"No sound-files provided!\");\r\n            return;\r\n        }\r\n\r\n        for (i = 0; i < sounds_num; i++) {\r\n            createSound(settings.sounds[i]);\r\n        }\r\n    };\r\n\r\n    ion.sound.VERSION = \"3.0.7\";\r\n\r\n    ion.sound._method = function (method, name, options) {\r\n        if (name) {\r\n            sounds[name] && sounds[name][method](options);\r\n        } else {\r\n            for (i in sounds) {\r\n                if (!sounds.hasOwnProperty(i) || !sounds[i]) {\r\n                    continue;\r\n                }\r\n\r\n                sounds[i][method](options);\r\n            }\r\n        }\r\n    };\r\n\r\n    ion.sound.preload = function (name, options) {\r\n        options = options || {};\r\n        extend({preload: true}, options);\r\n\r\n        ion.sound._method(\"init\", name, options);\r\n    };\r\n\r\n    ion.sound.destroy = function (name) {\r\n        ion.sound._method(\"destroy\", name);\r\n\r\n        if (name) {\r\n            sounds[name] = null;\r\n        } else {\r\n            for (i in sounds) {\r\n                if (!sounds.hasOwnProperty(i)) {\r\n                    continue;\r\n                }\r\n                if (sounds[i]) {\r\n                    sounds[i] = null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ion.sound.play = function (name, options) {\r\n        ion.sound._method(\"play\", name, options);\r\n    };\r\n\r\n    ion.sound.stop = function (name, options) {\r\n        ion.sound._method(\"stop\", name, options);\r\n    };\r\n\r\n    ion.sound.pause = function (name, options) {\r\n        ion.sound._method(\"pause\", name, options);\r\n    };\r\n\r\n    ion.sound.volume = function (name, options) {\r\n        ion.sound._method(\"volume\", name, options);\r\n    };\r\n\r\n    if ($) {\r\n        $.ionSound = ion.sound;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Web Audio API core\r\n     * - for most advanced browsers\r\n     */\r\n\r\n    var AudioContext = window.AudioContext || window.webkitAudioContext,\r\n        audio;\r\n\r\n    if (AudioContext) {\r\n        audio = new AudioContext();\r\n    }\r\n\r\n\r\n    var Sound = function (options) {\r\n        this.options = extend(settings);\r\n        delete this.options.sounds;\r\n        extend(options, this.options);\r\n\r\n        this.request = null;\r\n        this.streams = {};\r\n        this.result = {};\r\n        this.ext = 0;\r\n        this.url = \"\";\r\n\r\n        this.loaded = false;\r\n        this.decoded = false;\r\n        this.no_file = false;\r\n        this.autoplay = false;\r\n    };\r\n\r\n    Sound.prototype = {\r\n        init: function (options) {\r\n            if (options) {\r\n                extend(options, this.options);\r\n            }\r\n\r\n            if (this.options.preload) {\r\n                this.load();\r\n            }\r\n        },\r\n\r\n        destroy: function () {\r\n            var stream;\r\n\r\n            for (i in this.streams) {\r\n                stream = this.streams[i];\r\n\r\n                if (stream) {\r\n                    stream.destroy();\r\n                    stream = null;\r\n                }\r\n            }\r\n            this.streams = {};\r\n            this.result = null;\r\n            this.options.buffer = null;\r\n            this.options = null;\r\n\r\n            if (this.request) {\r\n                this.request.removeEventListener(\"load\", this.ready.bind(this), false);\r\n                this.request.removeEventListener(\"error\", this.error.bind(this), false);\r\n                this.request.abort();\r\n                this.request = null;\r\n            }\r\n        },\r\n\r\n        createUrl: function () {\r\n            var no_cache = new Date().valueOf();\r\n            this.url = this.options.path + encodeURIComponent(this.options.name) + \".\" + this.options.supported[this.ext] + \"?\" + no_cache;\r\n        },\r\n\r\n        load: function () {\r\n            if (this.no_file) {\r\n                warn(\"No sources for \\\"\" + this.options.name + \"\\\" sound :(\");\r\n                return;\r\n            }\r\n\r\n            if (this.request) {\r\n                return;\r\n            }\r\n\r\n            this.createUrl();\r\n\r\n            this.request = new XMLHttpRequest();\r\n            this.request.open(\"GET\", this.url, true);\r\n            this.request.responseType = \"arraybuffer\";\r\n            this.request.addEventListener(\"load\", this.ready.bind(this), false);\r\n            this.request.addEventListener(\"error\", this.error.bind(this), false);\r\n\r\n            this.request.send();\r\n        },\r\n\r\n        reload: function () {\r\n            this.ext++;\r\n\r\n            if (this.options.supported[this.ext]) {\r\n                this.load();\r\n            } else {\r\n                this.no_file = true;\r\n                warn(\"No sources for \\\"\" + this.options.name + \"\\\" sound :(\");\r\n            }\r\n        },\r\n\r\n        ready: function (data) {\r\n            this.result = data.target;\r\n\r\n            if (this.result.readyState !== 4) {\r\n                this.reload();\r\n                return;\r\n            }\r\n\r\n            if (this.result.status !== 200 && this.result.status !== 0) {\r\n                warn(this.url + \" was not found on server!\");\r\n                this.reload();\r\n                return;\r\n            }\r\n\r\n            this.request.removeEventListener(\"load\", this.ready.bind(this), false);\r\n            this.request.removeEventListener(\"error\", this.error.bind(this), false);\r\n            this.request = null;\r\n            this.loaded = true;\r\n            //warn(\"Loaded: \" + this.options.name + \".\" + settings.supported[this.ext]);\r\n\r\n            this.decode();\r\n        },\r\n\r\n        decode: function () {\r\n            if (!audio) {\r\n                return;\r\n            }\r\n\r\n            audio.decodeAudioData(this.result.response, this.setBuffer.bind(this), this.error.bind(this));\r\n        },\r\n\r\n        setBuffer: function (buffer) {\r\n            this.options.buffer = buffer;\r\n            this.decoded = true;\r\n            //warn(\"Decoded: \" + this.options.name + \".\" + settings.supported[this.ext]);\r\n\r\n            var config = {\r\n                name: this.options.name,\r\n                alias: this.options.alias,\r\n                ext: this.options.supported[this.ext],\r\n                duration: this.options.buffer.duration\r\n            };\r\n\r\n            if (this.options.ready_callback && typeof this.options.ready_callback === \"function\") {\r\n                this.options.ready_callback.call(this.options.scope, config);\r\n            }\r\n\r\n            if (this.options.sprite) {\r\n\r\n                for (i in this.options.sprite) {\r\n                    this.options.start = this.options.sprite[i][0];\r\n                    this.options.end = this.options.sprite[i][1];\r\n                    this.streams[i] = new Stream(this.options, i);\r\n                }\r\n\r\n            } else {\r\n\r\n                this.streams[0] = new Stream(this.options);\r\n\r\n            }\r\n\r\n            if (this.autoplay) {\r\n                this.autoplay = false;\r\n                this.play();\r\n            }\r\n        },\r\n\r\n        error: function () {\r\n            this.reload();\r\n        },\r\n\r\n        play: function (options) {\r\n            delete this.options.part;\r\n\r\n            if (options) {\r\n                extend(options, this.options);\r\n            }\r\n\r\n            if (!this.loaded) {\r\n                this.autoplay = true;\r\n                this.load();\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.no_file || !this.decoded) {\r\n                return;\r\n            }\r\n\r\n            if (this.options.sprite) {\r\n                if (this.options.part) {\r\n                    this.streams[this.options.part].play(this.options);\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        this.streams[i].play(this.options);\r\n                    }\r\n                }\r\n            } else {\r\n                this.streams[0].play(this.options);\r\n            }\r\n        },\r\n\r\n        stop: function (options) {\r\n            if (this.options.sprite) {\r\n\r\n                if (options) {\r\n                    this.streams[options.part].stop();\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        this.streams[i].stop();\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                this.streams[0].stop();\r\n            }\r\n        },\r\n\r\n        pause: function (options) {\r\n            if (this.options.sprite) {\r\n\r\n                if (options) {\r\n                    this.streams[options.part].pause();\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        this.streams[i].pause();\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                this.streams[0].pause();\r\n            }\r\n        },\r\n\r\n        volume: function (options) {\r\n            var stream;\r\n\r\n            if (options) {\r\n                extend(options, this.options);\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (this.options.sprite) {\r\n                if (this.options.part) {\r\n                    stream = this.streams[this.options.part];\r\n                    stream && stream.setVolume(this.options);\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        stream = this.streams[i];\r\n                        stream && stream.setVolume(this.options);\r\n                    }\r\n                }\r\n            } else {\r\n                stream = this.streams[0];\r\n                stream && stream.setVolume(this.options);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    var Stream = function (options, sprite_part) {\r\n        this.alias = options.alias;\r\n        this.name = options.name;\r\n        this.sprite_part = sprite_part;\r\n\r\n        this.buffer = options.buffer;\r\n        this.start = options.start || 0;\r\n        this.end = options.end || this.buffer.duration;\r\n        this.multiplay = options.multiplay || false;\r\n        this.volume = options.volume || 1;\r\n        this.scope = options.scope;\r\n        this.ended_callback = options.ended_callback;\r\n\r\n        this.setLoop(options);\r\n\r\n        this.source = null;\r\n        this.gain = null;\r\n        this.playing = false;\r\n        this.paused = false;\r\n\r\n        this.time_started = 0;\r\n        this.time_ended = 0;\r\n        this.time_played = 0;\r\n        this.time_offset = 0;\r\n    };\r\n\r\n    Stream.prototype = {\r\n        destroy: function () {\r\n            this.stop();\r\n\r\n            this.buffer = null;\r\n            this.source = null;\r\n\r\n            this.gain && this.gain.disconnect();\r\n            this.source && this.source.disconnect();\r\n            this.gain = null;\r\n            this.source = null;\r\n        },\r\n\r\n        setLoop: function (options) {\r\n            if (options.loop === true) {\r\n                this.loop = 9999999;\r\n            } else if (typeof options.loop === \"number\") {\r\n                this.loop = +options.loop - 1;\r\n            } else {\r\n                this.loop = false;\r\n            }\r\n        },\r\n\r\n        update: function (options) {\r\n            this.setLoop(options);\r\n            if (\"volume\" in options) {\r\n                this.volume = options.volume;\r\n            }\r\n        },\r\n\r\n        play: function (options) {\r\n            if (options) {\r\n                this.update(options);\r\n            }\r\n\r\n            if (!this.multiplay && this.playing) {\r\n                return;\r\n            }\r\n\r\n            this.gain = audio.createGain();\r\n            this.source = audio.createBufferSource();\r\n            this.source.buffer = this.buffer;\r\n            this.source.connect(this.gain);\r\n            this.gain.connect(audio.destination);\r\n            this.gain.gain.value = this.volume;\r\n\r\n            this.source.onended = this.ended.bind(this);\r\n\r\n            this._play();\r\n        },\r\n\r\n        _play: function () {\r\n            var start,\r\n                end;\r\n\r\n            if (this.paused) {\r\n                start = this.start + this.time_offset;\r\n                end = this.end - this.time_offset;\r\n            } else {\r\n                start = this.start;\r\n                end = this.end;\r\n            }\r\n\r\n            if (end <= 0) {\r\n                this.clear();\r\n                return;\r\n            }\r\n\r\n            if (typeof this.source.start === \"function\") {\r\n                this.source.start(0, start, end);\r\n            } else {\r\n                this.source.noteOn(0, start, end);\r\n            }\r\n\r\n            this.playing = true;\r\n            this.paused = false;\r\n            this.time_started = new Date().valueOf();\r\n        },\r\n\r\n        stop: function () {\r\n            if (this.playing && this.source) {\r\n                if (typeof this.source.stop === \"function\") {\r\n                    this.source.stop(0);\r\n                } else {\r\n                    this.source.noteOff(0);\r\n                }\r\n            }\r\n\r\n            this.clear();\r\n        },\r\n\r\n        pause: function () {\r\n            if (this.paused) {\r\n                this.play();\r\n                return;\r\n            }\r\n\r\n            if (!this.playing) {\r\n                return;\r\n            }\r\n\r\n            this.source && this.source.stop(0);\r\n            this.paused = true;\r\n        },\r\n\r\n        ended: function () {\r\n            this.playing = false;\r\n            this.time_ended = new Date().valueOf();\r\n            this.time_played = (this.time_ended - this.time_started) / 1000;\r\n            this.time_offset += this.time_played;\r\n\r\n            if (this.time_offset >= this.end || this.end - this.time_offset < 0.015) {\r\n                this._ended();\r\n                this.clear();\r\n\r\n                if (this.loop) {\r\n                    this.loop--;\r\n                    this.play();\r\n                }\r\n            }\r\n        },\r\n\r\n        _ended: function () {\r\n            var config = {\r\n                name: this.name,\r\n                alias: this.alias,\r\n                part: this.sprite_part,\r\n                start: this.start,\r\n                duration: this.end\r\n            };\r\n\r\n            if (this.ended_callback && typeof this.ended_callback === \"function\") {\r\n                this.ended_callback.call(this.scope, config);\r\n            }\r\n        },\r\n\r\n        clear: function () {\r\n            this.time_played = 0;\r\n            this.time_offset = 0;\r\n            this.paused = false;\r\n            this.playing = false;\r\n        },\r\n\r\n        setVolume: function (options) {\r\n            this.volume = options.volume;\r\n\r\n            if (this.gain) {\r\n                this.gain.gain.value = this.volume;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (audio) {\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Fallback for HTML5 audio\r\n     * - for not so modern browsers\r\n     */\r\n\r\n    var checkSupport = function () {\r\n        var sound = new Audio(),\r\n            can_play_mp3 = sound.canPlayType('audio/mpeg'),\r\n            can_play_ogg = sound.canPlayType('audio/ogg'),\r\n            can_play_aac = sound.canPlayType('audio/mp4; codecs=\"mp4a.40.2\"'),\r\n            item, i;\r\n\r\n        for (i = 0; i < settings.supported.length; i++) {\r\n            item = settings.supported[i];\r\n\r\n            if (!can_play_mp3 && item === \"mp3\") {\r\n                settings.supported.splice(i, 1);\r\n            }\r\n\r\n            if (!can_play_ogg && item === \"ogg\") {\r\n                settings.supported.splice(i, 1);\r\n            }\r\n\r\n            if (!can_play_aac && item === \"aac\") {\r\n                settings.supported.splice(i, 1);\r\n            }\r\n\r\n            if (!can_play_aac && item === \"mp4\") {\r\n                settings.supported.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        sound = null;\r\n    };\r\n    checkSupport();\r\n\r\n\r\n\r\n    Sound.prototype = {\r\n        init: function (options) {\r\n            if (options) {\r\n                extend(options, this.options);\r\n            }\r\n\r\n            this.inited = true;\r\n\r\n            if (this.options.preload) {\r\n                this.load();\r\n            }\r\n        },\r\n\r\n        destroy: function () {\r\n            var stream;\r\n\r\n            for (i in this.streams) {\r\n                stream = this.streams[i];\r\n\r\n                if (stream) {\r\n                    stream.destroy();\r\n                    stream = null;\r\n                }\r\n            }\r\n            this.streams = {};\r\n            this.loaded = false;\r\n            this.inited = false;\r\n        },\r\n\r\n        load: function () {\r\n            var part;\r\n\r\n            this.options.preload = true;\r\n            this.options._ready = this.ready;\r\n            this.options._scope = this;\r\n\r\n            if (this.options.sprite) {\r\n\r\n                for (i in this.options.sprite) {\r\n                    part = this.options.sprite[i];\r\n\r\n                    this.options.start = part[0];\r\n                    this.options.end = part[1];\r\n\r\n                    this.streams[i] = new Stream(this.options, i);\r\n                }\r\n\r\n            } else {\r\n\r\n                this.streams[0] = new Stream(this.options);\r\n\r\n            }\r\n        },\r\n\r\n        ready: function (duration) {\r\n            if (this.loaded) {\r\n                return;\r\n            }\r\n\r\n            this.loaded = true;\r\n\r\n            var config = {\r\n                name: this.options.name,\r\n                alias: this.options.alias,\r\n                ext: this.options.supported[this.ext],\r\n                duration: duration\r\n            };\r\n\r\n            if (this.options.ready_callback && typeof this.options.ready_callback === \"function\") {\r\n                this.options.ready_callback.call(this.options.scope, config);\r\n            }\r\n\r\n            if (this.autoplay) {\r\n                this.autoplay = false;\r\n                this.play();\r\n            }\r\n        },\r\n\r\n        play: function (options) {\r\n            if (!this.inited) {\r\n                return;\r\n            }\r\n\r\n            delete this.options.part;\r\n\r\n            if (options) {\r\n                extend(options, this.options);\r\n            }\r\n\r\n            console.log(1);\r\n            if (!this.loaded) {\r\n                if (!this.options.preload) {\r\n                    this.autoplay = true;\r\n                    this.load();\r\n                } else {\r\n                    this.autoplay = true;\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.options.sprite) {\r\n                if (this.options.part) {\r\n                    this.streams[this.options.part].play(this.options);\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        this.streams[i].play(this.options);\r\n                    }\r\n                }\r\n            } else {\r\n                this.streams[0].play(this.options);\r\n            }\r\n        },\r\n\r\n        stop: function (options) {\r\n            if (!this.inited) {\r\n                return;\r\n            }\r\n\r\n            if (this.options.sprite) {\r\n\r\n                if (options) {\r\n                    this.streams[options.part].stop();\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        this.streams[i].stop();\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                this.streams[0].stop();\r\n            }\r\n        },\r\n\r\n        pause: function (options) {\r\n            if (!this.inited) {\r\n                return;\r\n            }\r\n\r\n            if (this.options.sprite) {\r\n\r\n                if (options) {\r\n                    this.streams[options.part].pause();\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        this.streams[i].pause();\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                this.streams[0].pause();\r\n            }\r\n        },\r\n\r\n        volume: function (options) {\r\n            var stream;\r\n\r\n            if (options) {\r\n                extend(options, this.options);\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (this.options.sprite) {\r\n                if (this.options.part) {\r\n                    stream = this.streams[this.options.part];\r\n                    stream && stream.setVolume(this.options);\r\n                } else {\r\n                    for (i in this.options.sprite) {\r\n                        stream = this.streams[i];\r\n                        stream && stream.setVolume(this.options);\r\n                    }\r\n                }\r\n            } else {\r\n                stream = this.streams[0];\r\n                stream && stream.setVolume(this.options);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    Stream = function (options, sprite_part) {\r\n        this.name = options.name;\r\n        this.alias = options.alias;\r\n        this.sprite_part = sprite_part;\r\n\r\n        this.multiplay = options.multiplay;\r\n        this.volume = options.volume;\r\n        this.preload = options.preload;\r\n        this.path = settings.path;\r\n        this.start = options.start || 0;\r\n        this.end = options.end || 0;\r\n        this.scope = options.scope;\r\n        this.ended_callback = options.ended_callback;\r\n\r\n        this._scope = options._scope;\r\n        this._ready = options._ready;\r\n\r\n        this.setLoop(options);\r\n\r\n        this.sound = null;\r\n        this.url = null;\r\n        this.loaded = false;\r\n\r\n        this.start_time = 0;\r\n        this.paused_time = 0;\r\n        this.played_time = 0;\r\n\r\n        this.init();\r\n    };\r\n\r\n    Stream.prototype = {\r\n        init: function () {\r\n            this.sound = new Audio();\r\n            this.sound.volume = this.volume;\r\n\r\n            this.createUrl();\r\n\r\n            this.sound.addEventListener(\"ended\", this.ended.bind(this), false);\r\n            this.sound.addEventListener(\"canplaythrough\", this.can_play_through.bind(this), false);\r\n            this.sound.addEventListener(\"timeupdate\", this._update.bind(this), false);\r\n\r\n            this.load();\r\n        },\r\n\r\n        destroy: function () {\r\n            this.stop();\r\n\r\n            this.sound.removeEventListener(\"ended\", this.ended.bind(this), false);\r\n            this.sound.removeEventListener(\"canplaythrough\", this.can_play_through.bind(this), false);\r\n            this.sound.removeEventListener(\"timeupdate\", this._update.bind(this), false);\r\n\r\n            this.sound = null;\r\n            this.loaded = false;\r\n        },\r\n\r\n        createUrl: function () {\r\n            var rand = new Date().valueOf();\r\n            this.url = this.path + encodeURIComponent(this.name) + \".\" + settings.supported[0] + \"?\" + rand;\r\n        },\r\n\r\n        can_play_through: function () {\r\n            if (this.preload) {\r\n                this.ready();\r\n            }\r\n        },\r\n\r\n        load: function () {\r\n            this.sound.src = this.url;\r\n            this.sound.preload = this.preload ? \"auto\" : \"none\";\r\n            if (this.preload) {\r\n                this.sound.load();\r\n            }\r\n        },\r\n\r\n        setLoop: function (options) {\r\n            if (options.loop === true) {\r\n                this.loop = 9999999;\r\n            } else if (typeof options.loop === \"number\") {\r\n                this.loop = +options.loop - 1;\r\n            } else {\r\n                this.loop = false;\r\n            }\r\n        },\r\n\r\n        update: function (options) {\r\n            this.setLoop(options);\r\n\r\n            if (\"volume\" in options) {\r\n                this.volume = options.volume;\r\n            }\r\n        },\r\n\r\n        ready: function () {\r\n            if (this.loaded || !this.sound) {\r\n                return;\r\n            }\r\n\r\n            this.loaded = true;\r\n            this._ready.call(this._scope, this.sound.duration);\r\n\r\n            if (!this.end) {\r\n                this.end = this.sound.duration;\r\n            }\r\n        },\r\n\r\n        play: function (options) {\r\n            if (options) {\r\n                this.update(options);\r\n            }\r\n\r\n            if (!this.multiplay && this.playing) {\r\n                return;\r\n            }\r\n\r\n            this._play();\r\n        },\r\n\r\n        _play: function () {\r\n            if (this.paused) {\r\n                this.paused = false;\r\n            } else {\r\n                try {\r\n                    this.sound.currentTime = this.start;\r\n                } catch (e) {}\r\n            }\r\n\r\n            this.playing = true;\r\n            this.start_time = new Date().valueOf();\r\n            this.sound.volume = this.volume;\r\n            this.sound.play();\r\n        },\r\n\r\n        stop: function () {\r\n            if (!this.playing) {\r\n                return;\r\n            }\r\n\r\n            this.playing = false;\r\n            this.paused = false;\r\n            this.sound.pause();\r\n            this.clear();\r\n\r\n            try {\r\n                this.sound.currentTime = this.start;\r\n            } catch (e) {}\r\n        },\r\n\r\n        pause: function () {\r\n            if (this.paused) {\r\n                this._play();\r\n            } else {\r\n                this.playing = false;\r\n                this.paused = true;\r\n                this.sound.pause();\r\n                this.paused_time = new Date().valueOf();\r\n                this.played_time += this.paused_time - this.start_time;\r\n            }\r\n        },\r\n\r\n        _update: function () {\r\n            if (!this.start_time) {\r\n                return;\r\n            }\r\n\r\n            var current_time = new Date().valueOf(),\r\n                played_time = current_time - this.start_time,\r\n                played = (this.played_time + played_time) / 1000;\r\n\r\n            if (played >= this.end) {\r\n                if (this.playing) {\r\n                    this.stop();\r\n                    this._ended();\r\n                }\r\n            }\r\n        },\r\n\r\n        ended: function () {\r\n            if (this.playing) {\r\n                this.stop();\r\n                this._ended();\r\n            }\r\n        },\r\n\r\n        _ended: function () {\r\n            this.playing = false;\r\n\r\n            var config = {\r\n                name: this.name,\r\n                alias: this.alias,\r\n                part: this.sprite_part,\r\n                start: this.start,\r\n                duration: this.end\r\n            };\r\n\r\n            if (this.ended_callback && typeof this.ended_callback === \"function\") {\r\n                this.ended_callback.call(this.scope, config);\r\n            }\r\n\r\n            if (this.loop) {\r\n                setTimeout(this.looper.bind(this), 15);\r\n            }\r\n        },\r\n\r\n        looper: function () {\r\n            this.loop--;\r\n            this.play();\r\n        },\r\n\r\n        clear: function () {\r\n            this.start_time = 0;\r\n            this.played_time = 0;\r\n            this.paused_time = 0;\r\n        },\r\n\r\n        setVolume: function (options) {\r\n            this.volume = options.volume;\r\n\r\n            if (this.sound) {\r\n                this.sound.volume = this.volume;\r\n            }\r\n        }\r\n    };\r\n\r\n} (window, navigator, window.jQuery || window.$));\r\n","import './vendor/ion.sound';\r\n\r\nconst NOTES = {\r\n  SNAP: 'snap',\r\n  A: 'bell_ring'\r\n};\r\n\r\nconst Player = (function () {\r\n  let instance;\r\n\r\n  function GlobalPlayer() {\r\n    const ion = window.ion;\r\n\r\n    ion.sound({\r\n      sounds: Object.values(NOTES).map(name => ({\r\n        name,\r\n        volume: name === NOTES.SNAP\r\n          ? 1.0\r\n          : 0.3\r\n      })),\r\n      path: \"sounds/\",\r\n      preload: true,\r\n      multiplay: true\r\n    });\r\n\r\n    return {\r\n      playNote: (note) => {\r\n        if (NOTES[note]) {\r\n          ion.sound.play(NOTES[note]);\r\n        }\r\n      },\r\n      playSnap: () => {\r\n        ion.sound.play(NOTES.SNAP);\r\n      },\r\n    }\r\n  }\r\n\r\n  return function() {\r\n    if (!instance) {\r\n      instance = new GlobalPlayer();\r\n    }\r\n\r\n    return instance;\r\n  }\r\n}());\r\n\r\nexport default Player;\r\n","export default function noop() {}\r\n","const second = 1000;\r\nconst minute = second * 60;\r\nimport noop from \"./helpers/noop\";\r\n\r\nexport default function Ticker({\r\n  ticksPerMinute = 60,\r\n  onTick = noop\r\n} = {}) {\r\n  let interval;\r\n\r\n  function stop() {\r\n    clearInterval(interval);\r\n  }\r\n\r\n  function start() {\r\n    stop();\r\n\r\n    interval = setInterval(onTick, minute / ticksPerMinute);\r\n  }\r\n\r\n  return {\r\n    start,\r\n    stop\r\n  }\r\n}\r\n","import noop from \"./helpers/noop\";\r\nimport createElement from \"./helpers/createElement\";\r\nimport __ from \"./helpers/translate\";\r\n\r\nexport default function ControllerView({\r\n  onPlay = noop,\r\n  onStop = noop,\r\n  viewerElement,\r\n  block = 'harp-view'\r\n} = {}) {\r\n  const state = {\r\n    playing: false\r\n  };\r\n\r\n  const $el = createElement('div', block);\r\n  const playButton = createElement('button', `${block}__play`, {\r\n    click: function() {\r\n      if (!state.playing) {\r\n        onPlay();\r\n      } else {\r\n        onStop();\r\n      }\r\n    }\r\n  });\r\n\r\n  function updateButton() {\r\n    playButton.innerText = __(!state.playing ? 'play' : 'stop');\r\n  }\r\n\r\n  updateButton();\r\n\r\n  $el.appendChild(playButton);\r\n\r\n  const viewerContainer = createElement('div', `${block}__viewer`);\r\n  viewerContainer.appendChild(viewerElement);\r\n  $el.appendChild(viewerContainer);\r\n\r\n  function update({playing = state.playing}) {\r\n    state.playing = playing;\r\n\r\n    updateButton();\r\n  }\r\n\r\n  return {\r\n    $el,\r\n    update\r\n  }\r\n}\r\n","const PAUSES = new Set(['x', 'z']);\r\n\r\nconst isPause = note => PAUSES.has(note);\r\n\r\nexport default isPause;\r\n","import Viewer from \"./viewer\";\r\nimport Player from './player';\r\nimport Ticker from './ticker';\r\nimport ControllerView from \"./controller-view\";\r\nimport isPause from './helpers/isPause';\r\n\r\nexport default function Controller({tune}) {\r\n  let tick = -1;\r\n  let tuneIndex = -1;\r\n  let ticksPerMinute = 60 * 4;\r\n\r\n  const tuneArray = tune.split('');\r\n  const ticksPerSnap = 4;\r\n  const ticksPerNote = 2;\r\n  const highLightTicks = 1;\r\n\r\n  const viewer = new Viewer();\r\n  const player = new Player();\r\n\r\n  const playAndShow = () => {\r\n    const note = tuneArray[tuneIndex];\r\n\r\n    viewer.dimAll();\r\n\r\n    if (isPause(note)) {\r\n      return;\r\n    }\r\n\r\n    player.playNote(note);\r\n    viewer.highLight(note);\r\n  };\r\n\r\n  let ticker;\r\n  let controllerView;\r\n\r\n  const stop = () => {\r\n    tick = -1;\r\n    tuneIndex = -1;\r\n\r\n    controllerView.update({playing: false});\r\n    ticker.stop();\r\n    viewer.dimAll();\r\n  };\r\n\r\n  const onTick = () => {\r\n    tick += 1;\r\n\r\n    if (tick % ticksPerNote === highLightTicks) {\r\n      viewer.dimAll();\r\n    }\r\n\r\n    if (tick % ticksPerNote === 0) {\r\n      tuneIndex += 1;\r\n\r\n      if (tuneIndex === tuneArray.length) {\r\n        return stop();\r\n      }\r\n\r\n      playAndShow();\r\n    }\r\n\r\n    if (tick % ticksPerSnap === 0) {\r\n      player.playSnap();\r\n    }\r\n  };\r\n\r\n  ticker = new Ticker({\r\n    ticksPerMinute,\r\n    onTick\r\n  });\r\n\r\n  controllerView = new ControllerView({\r\n    viewerElement: viewer.$el,\r\n\r\n    onPlay() {\r\n      controllerView.update({playing: true});\r\n\r\n      ticker.start();\r\n    },\r\n    onStop: stop\r\n  });\r\n\r\n  return controllerView.$el;\r\n}\r\n","import insertAfter from './helpers/insertAfter';\r\nimport __ from './helpers/translate';\r\nimport tuneValid from './helpers/tuneValid';\r\nimport Controller from \"./controller\";\r\n\r\nwindow.HarpView = function(selector) {\r\n  document.querySelectorAll('.' + selector).forEach(node => {\r\n    const tune = node.innerHTML.trim();\r\n\r\n    if (!tuneValid(tune)) {\r\n      console.error(__('error.bad-tune'), node);\r\n\r\n      return;\r\n    }\r\n\r\n    insertAfter(new Controller({tune}), node);\r\n  });\r\n};\r\n"]}